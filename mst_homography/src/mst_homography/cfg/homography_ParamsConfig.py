## *********************************************************
## 
## File autogenerated for the mst_homography package 
## by the dynamic_reconfigure package.
## Please do not edit.
## 
## ********************************************************/

##**********************************************************
## Software License Agreement (BSD License)
##
##  Copyright (c) 2008, Willow Garage, Inc.
##  All rights reserved.
##
##  Redistribution and use in source and binary forms, with or without
##  modification, are permitted provided that the following conditions
##  are met:
##
##   * Redistributions of source code must retain the above copyright
##     notice, this list of conditions and the following disclaimer.
##   * Redistributions in binary form must reproduce the above
##     copyright notice, this list of conditions and the following
##     disclaimer in the documentation and/or other materials provided
##     with the distribution.
##   * Neither the name of the Willow Garage nor the names of its
##     contributors may be used to endorse or promote products derived
##     from this software without specific prior written permission.
##
##  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
##  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
##  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
##  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
##  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
##  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
##  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
##  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
##  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
##  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
##  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
##  POSSIBILITY OF SUCH DAMAGE.
##**********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'upper': 'DEFAULT', 'lower': 'groups', 'srcline': 233, 'name': 'Default', 'parent': 0, 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT', 'field': 'default', 'state': True, 'parentclass': '', 'groups': [], 'parameters': [{'srcline': 259, 'description': 'The base footprint of the robot', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'frame_id', 'edit_method': '', 'default': '/base_footprint', 'level': 1, 'min': '', 'type': 'str'}, {'srcline': 259, 'description': 'option to use tf to find angle', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'use_trans', 'edit_method': '', 'default': False, 'level': 1, 'min': False, 'type': 'bool'}, {'srcline': 259, 'description': 'camera rotation aplied to perspective.', 'max': 0.003, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'theta_x', 'edit_method': '', 'default': 0.0, 'level': 1, 'min': -0.003, 'type': 'double'}, {'srcline': 259, 'description': 'camera rotation aplied to perspective.', 'max': 0.01, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'theta_y', 'edit_method': '', 'default': 0.0, 'level': 1, 'min': -0.01, 'type': 'double'}, {'srcline': 259, 'description': 'camera rotation aplied to perspective.', 'max': 3.141592653589793, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'theta_z', 'edit_method': '', 'default': 0.0, 'level': 1, 'min': -3.141592653589793, 'type': 'double'}, {'srcline': 259, 'description': 'center rotation is aplied on.', 'max': 360.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'center_x', 'edit_method': '', 'default': 0.0, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'center rotation is aplied on.', 'max': 480.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'center_y', 'edit_method': '', 'default': 0.0, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'scale applied to the transform', 'max': 10, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'scale', 'edit_method': '', 'default': 0, 'level': 1, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'name of the laser frame', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'laser_frame', 'edit_method': '', 'default': 'bob', 'level': 1, 'min': '', 'type': 'str'}, {'srcline': 259, 'description': 'angle through wich the scan searches in rad', 'max': 3.141592653589793, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'laser_angle', 'edit_method': '', 'default': 3.141592653589793, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'The search  degrees of laser', 'max': 360, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'laser_res', 'edit_method': '', 'default': 180, 'level': 1, 'min': 1, 'type': 'int'}, {'srcline': 259, 'description': 'The search radius of the laser in m.', 'max': 30.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'laser_range_min', 'edit_method': '', 'default': 0.5, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'The search radius of the laser in m.', 'max': 30.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'laser_range_max', 'edit_method': '', 'default': 10.0, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'the increment time increment of the laser in sec', 'max': 30.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'laser_time_increment', 'edit_method': '', 'default': 0.0, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'the scan time increment of the laser in sec', 'max': 30.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'laser_scan_time', 'edit_method': '', 'default': 0.0, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'The number of pixels to average for the threshold', 'max': 50, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'window_size', 'edit_method': '', 'default': 8, 'level': 1, 'min': 1, 'type': 'int'}, {'srcline': 259, 'description': 'the threshold to qulify as obsticale', 'max': 1000.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'laser_threshold', 'edit_method': '', 'default': 200.0, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'number of pixels per meter', 'max': 300.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'pixels_per_meter', 'edit_method': '', 'default': 20.0, 'level': 1, 'min': 0.0001, 'type': 'double'}, {'srcline': 259, 'description': 'height of the calibration square in meters', 'max': 300.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'calibration_height', 'edit_method': '', 'default': 1.0, 'level': 1, 'min': 0.0001, 'type': 'double'}, {'srcline': 259, 'description': 'width of the calibration square in meters', 'max': 300.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'calibration_width', 'edit_method': '', 'default': 1.0, 'level': 1, 'min': 0.0001, 'type': 'double'}, {'srcline': 259, 'description': 'distance to botom center  in meters', 'max': 5.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'calibration_x', 'edit_method': '', 'default': 1.0, 'level': 1, 'min': -5.0, 'type': 'double'}, {'srcline': 259, 'description': 'distance to bottom center in meters', 'max': 5.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'calibration_y', 'edit_method': '', 'default': 1.0, 'level': 1, 'min': 0.0, 'type': 'double'}, {'srcline': 259, 'description': 'The height of the robot mask.', 'max': 400, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'robot_x', 'edit_method': '', 'default': 200, 'level': 1, 'min': 0, 'type': 'int'}, {'srcline': 259, 'description': 'The width of the robot mask.', 'max': 400, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py', 'name': 'robot_y', 'edit_method': '', 'default': 100, 'level': 1, 'min': 0, 'type': 'int'}], 'type': '', 'id': 0}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])    
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

