#! /usr/bin/env python
# Forearm camera configuration

PACKAGE='mst_homography'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name                    Type      Reconfiguration level             Description                                        Default    Min   Max
gen.add("frame_id",             str_t,    SensorLevels.RECONFIGURE_STOP,    "The base footprint of the robot"                  ,"/base_footprint")
gen.add("use_trans",          bool_t,   SensorLevels.RECONFIGURE_STOP,    "option to use tf to find angle",            False)
gen.add("theta_x",        double_t, SensorLevels.RECONFIGURE_STOP,    "camera rotation aplied to perspective.",          0,       -0.01,  0.01)
gen.add("theta_y",        double_t, SensorLevels.RECONFIGURE_STOP,    "camera rotation aplied to perspective.",          0,       -0.01,  0.01)
gen.add("theta_z",        double_t, SensorLevels.RECONFIGURE_STOP,    "camera rotation aplied to perspective.",          0,       -pi,  pi)
gen.add("center_x",        double_t, SensorLevels.RECONFIGURE_STOP,    "center rotation is aplied on.",          0,       0,  360)
gen.add("center_y",        double_t, SensorLevels.RECONFIGURE_STOP,    "center rotation is aplied on.",          0,       0,  480)
gen.add("scale",        double_t, SensorLevels.RECONFIGURE_STOP,    "center rotation is aplied on.",          0,       0,  10)


exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "homography_Params"))

