<launch>

    <!-- Define arguments and defaults  -->
    <arg name="usb" default="0" />
    <arg name="display" default="1" />
    <arg name="robot" default="1" />
    <arg name="edges" default="0" />
    <arg name="rviz" default="False" />
	<arg name="joint_gui" default="False" />
    
    <!-- launch potential navigation    -->
    <node pkg="MST_Potential_Navigation" type="Pot_Nav" name="Pot_Nav" >
    
        <!-- load parameters into parameter server  -->
        <rosparam file="$(find MST_Control)/yaml/Pot_Nav.yaml" command="load" />

    </node>
    
    
    
    <node pkg="MST_Control" type="Control" name="Control"  required="true" >
        	
    	<rosparam file="$(find MST_Control)/yaml/Control.yaml" command="load" />
    	
    	<param name = "minus_sound" value = "$(find MST_Control)/sounds/Ahooga_Car_Horn.wav" />
    	
    	<param name = "navigation_waypoints" value = "$(find MST_Control)/yaml/Navigation_Waypoints.yaml" />
    	
    	<param name = "autonomous_waypoints" value = "$(find MST_Control)/yaml/Autonomous_Waypoints.yaml" />

    </node>

    <node pkg="MST_Position" type="Position" name="Position" >
        	
    	<rosparam file="$(find MST_Control)/yaml/Carrot.yaml" command="load" />

    </node>
    
    
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find jomegatron_description)/urdf/jomegatron.urdf.xacro'" />
    <param name="use_gui" value="$(arg joint_gui)"/>
    
    
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find urdf_tutorial)/urdf.vcg" if="$(arg rviz)"/>
    
    
    <node pkg="wiimote" type="wiimote_node.py" name="wiimote" respawn="true" />
    
    <node pkg="sound_play" type="soundplay_node.py" name="sound_play" />

    
    <group if="$(arg usb)">
    
    	<include file="$(find uvc_camera)/launch/camera_node.launch"  />
        
        <param name="uvc_camera/frame" value="pt_grey_link" />
        
    	<node if="$(arg edges)" pkg="MST_Edge_Detection" type="Edge_Detection" name="Edge_Detection" args= "image:=/image_raw"  >
    	    	
    		<rosparam file="$(find MST_Control)/yaml/Edge_Detection.yaml" command="load" />

    	</node>
    	
    	
    	<node pkg="MST_ColorStat" type="ColorStat" name="ColorStat" args= "image:=/image_raw" >
        	
    		<rosparam file="$(find MST_Control)/yaml/ColorStat.yaml" command="load"  />

    	</node>

    </group>
    
    <group unless="$(arg usb)">
    
    	<include file="$(find MST_Edge_Detection)/launch/ptgrey.launch"  />

		<node pkg="image_proc" type="image_proc" name="image_proc" ns="ptgrey"  />  
    
        
    	<node if="$(arg edges)" pkg="MST_Edge_Detection" type="Edge_Detection" name="Edge_Detection" args= "image:=ptgrey/image_rect_color" >
    	    	
    		<rosparam file="$(find MST_Control)/yaml/Edge_Detection.yaml" command="load" />

    	</node>
    	
    	
    	<node pkg="MST_ColorStat" type="ColorStat" name="ColorStat" args= "image:=ptgrey/image_rect_color" >
        	
    		<rosparam file="$(find MST_Control)/yaml/ColorStat.yaml" command="load"  />

    	</node>
    	
    </group>

    <group if="$(arg robot)">
    	
    	<node pkg="mst_midg" type="Midg" name="Midg" />
		<node pkg="MST_Motors" type="Motors" name="Motors" />
		<node pkg="MST_Estop" type="Estop" name="Estop" />
    	
    </group>
    
    <group if="$(arg display)">
    
		<node pkg="image_view" type="image_view" name="ptgrey_display" args="image:=/image_raw" if="$(arg usb)"/>
		
		<node pkg="image_view" type="image_view" name="ptgrey_display" args="image:=ptgrey/image_rect_color" unless="$(arg usb)"/>
	
		<node if="$(arg edges)" pkg="image_view" type="image_view" name="edges_display" args="image:=image_edges" />
		
		<node pkg="image_view" type="image_view" name="stat_display" args="image:=image_stat" />
	
		<node pkg="image_view" type="image_view" name="map_display" args="image:=map" />
	
		<node pkg="dynamic_reconfigure" type="reconfigure_gui" name="reconfigure_gui" />
		
	</group>

</launch>
